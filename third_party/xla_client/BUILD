load("//tensorflow/compiler/xla:xla.bzl", "xla_cc_test")
load(
    "//tensorflow:tensorflow.bzl",
    "if_with_tpu_support",
    "tf_cc_shared_object",
)
load(
    "//tensorflow/tsl/platform/default:build_config.bzl",
    "tf_proto_library_cc",
)
load(
    "//tensorflow/tsl/platform/default:cuda_build_defs.bzl",
    "if_cuda_is_configured",
)

licenses(["notice"])  # Apache 2.0

package(default_visibility = ["//tensorflow:internal"])

exports_files(
    [
        "tf_version_script.lds",
        "tf_exported_symbols.lds",
    ],
)

tf_proto_library_cc(
    name = "mesh_service_proto",
    srcs = ["mesh_service.proto"],
    has_services = 1,
    cc_api_version = 2,
    cc_grpc_version = 1,
    protodeps = [
        "//tensorflow/core/protobuf/tpu:topology_proto",
    ],
)

tf_cc_shared_object(
    name = "libxla_computation_client.so",
    linkopts = select({
        "//tensorflow:windows": [],
        "//conditions:default": [
            "-z defs",
            "-Wl,--version-script",  #  This line must be directly followed by the version_script.lds file
            "$(location //tensorflow/compiler/xla/xla_client:tf_version_script.lds)",
        ],
    }),
    visibility = ["//visibility:public"],
    deps = [
        ":computation_client_impl",
        "//tensorflow/compiler/xla:literal_util",
        "//tensorflow/compiler/xla/client",
        "//tensorflow/compiler/xla/client:global_data",
        "//tensorflow/compiler/xla/client:xla_builder",
        "//tensorflow/compiler/xla/client:xla_computation",
        "//tensorflow/compiler/xla/client/lib:svd",
        "//tensorflow/compiler/xla/rpc:grpc_stub",
        "//tensorflow/compiler/xla/xla_client:tf_exported_symbols.lds",
        "//tensorflow/compiler/xla/xla_client:tf_version_script.lds",
        "//tensorflow/core:lib",
        "//tensorflow/core/platform/cloud:gcs_file_system",
        "//tensorflow/python/profiler/internal:profiler_pywrap_impl",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "computation_client_impl",
    srcs = [
        "computation_client.cc",
        "env_vars.cc",
        "mesh_service.cc",
        "metrics.cc",
        "metrics_analysis.cc",
        "metrics_reader.cc",
        "multi_wait.cc",
        "nccl_distributed.cc",
        "pjrt_computation_client.cc",
        "profiler.cc",
        "record_reader.cc",
        "sys_util.cc",
        "tf_logging.cc",
        "thread_pool.cc",
        "triggered_task.cc",
        "util.cc",
        "xla_util.cc",
        "xrt_computation_client.cc",
        "xrt_local_service.cc",
        "xrt_session.cc",
        "xrt_session_cache.cc",
    ],
    hdrs = [
        "cache.h",
        "computation_client.h",
        "debug_macros.h",
        "env_vars.h",
        "mesh_service.h",
        "metrics.h",
        "metrics_analysis.h",
        "metrics_reader.h",
        "multi_wait.h",
        "nccl_distributed.h",
        "pjrt_computation_client.h",
        "profiler.h",
        "record_reader.h",
        "sys_util.h",
        "tf_logging.h",
        "thread_pool.h",
        "triggered_task.h",
        "types.h",
        "unique.h",
        "util.h",
        "xla_util.h",
        "xrt_computation_client.h",
        "xrt_local_service.h",
        "xrt_session.h",
        "xrt_session_cache.h",
    ],
    deps = [
        ":mesh_service_proto_cc",
        "//tensorflow:grpc",
        "//tensorflow:grpc++",
        "//tensorflow/cc:client_session",
        "//tensorflow/cc:scope",
        "//tensorflow/compiler/jit:xla_cpu_device",
        "//tensorflow/compiler/xla:debug_options_flags",
        "//tensorflow/compiler/xla:literal",
        "//tensorflow/compiler/xla:literal_util",
        "//tensorflow/compiler/xla:shape_util",
        "//tensorflow/compiler/xla:xla_proto_cc",
        "//tensorflow/compiler/xla/client",
        "//tensorflow/compiler/xla/client/lib:arithmetic",
        "//tensorflow/compiler/xla/client/lib:comparators",
        "//tensorflow/compiler/xla/client/lib:constants",
        "//tensorflow/compiler/xla/client/lib:logdet",
        "//tensorflow/compiler/xla/client/lib:math",
        "//tensorflow/compiler/xla/client/lib:matrix",
        "//tensorflow/compiler/xla/client/lib:pooling",
        "//tensorflow/compiler/xla/client/lib:qr",
        "//tensorflow/compiler/xla/client/lib:slicing",
        "//tensorflow/compiler/xla/client/lib:sorting",
        "//tensorflow/compiler/xla/client/lib:svd",
        "//tensorflow/compiler/xla/client/lib:tridiagonal",
        "//tensorflow/compiler/xla/client:global_data",
        "//tensorflow/compiler/xla/client:xla_computation",
        "//tensorflow/compiler/xla/pjrt/gpu:se_gpu_pjrt_client",
        "//tensorflow/compiler/xla/pjrt:tpu_client",
        "//tensorflow/compiler/xla/pjrt:pjrt_client",
        "//tensorflow/compiler/xla/pjrt:tfrt_cpu_pjrt_client",
        "//tensorflow/compiler/xla/pjrt:pjrt_c_api_client",
        "//tensorflow/compiler/xla/rpc:grpc_stub",
        "//tensorflow/compiler/xla/service:cpu_plugin",
        "//tensorflow/compiler/xla/service:platform_util",
        "//tensorflow/compiler/xla:statusor",
        "//tensorflow/compiler/xla:xla_data_proto_cc",
        "//tensorflow/compiler/xla/service:hlo_proto_cc",
        "//tensorflow/compiler/xla/hlo/ir:hlo",
        "//tensorflow/compiler/xla/service/spmd:spmd_partitioner",
        "//tensorflow/compiler/xrt:xrt_proto_cc",
        "//tensorflow/compiler/xrt:xrt_server",
        "//tensorflow/compiler/xrt:xrt_utils",
        "//tensorflow/compiler/xrt/cc:xrt_ops",
        "//tensorflow/core:core_cpu",
        "//tensorflow/core:framework_internal",
        "//tensorflow/core:lib",
        "//tensorflow/core:protos_all_cc",
        "//tensorflow/core/distributed_runtime:server_lib",
        "//tensorflow/core/distributed_runtime/rpc:grpc_runtime",
        "//tensorflow/core/kernels:data_flow",
        "//tensorflow/core/profiler/rpc:profiler_server_impl",
        "//tensorflow/core/profiler/rpc/client:profiler_client",
        "//tensorflow/core/protobuf/tpu:topology_proto_cc",
        "//tensorflow/compiler/xla/stream_executor:stream_executor_impl",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_absl//absl/strings",
    ] + if_cuda_is_configured([
        "@local_config_nccl//:nccl",
        "//tensorflow/compiler/jit:xla_gpu_device",
        "//tensorflow/compiler/xla/stream_executor:cuda_platform",
    ]) + if_with_tpu_support([
        "//tensorflow/compiler/jit:xla_tpu_device",
        "//tensorflow/compiler/jit:xla_tpu_jit",
    ]),
    alwayslink = 1,
)

xla_cc_test(
    name = "pjrt_computation_client_test",
    srcs = ["pjrt_computation_client_test.cc"],
    deps = [
        ":computation_client_impl",
        "//tensorflow/compiler/xla:literal",
        "//tensorflow/compiler/xla:literal_util",
        "//tensorflow/compiler/xla:shape_util",
        "//tensorflow/compiler/xla:status",
        "//tensorflow/compiler/xla:statusor",
        "//tensorflow/compiler/xla/client:xla_builder",
        "//tensorflow/compiler/xla/client:xla_computation",
        "//tensorflow/compiler/xla/tests:literal_test_util",
        "//tensorflow/compiler/xla/tools:hlo_module_loader",
        "//tensorflow/core/platform:logging",
        "//tensorflow/tsl/lib/core:status_test_util",
        "//tensorflow/tsl/platform:env",
        "//tensorflow/tsl/platform:test",
        "//tensorflow/tsl/platform:test_main",
    ],
)
