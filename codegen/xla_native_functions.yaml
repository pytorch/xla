backend: XLA
cpp_namespace: torch_xla
full_codegen:
  - acos
  - acosh
  - abs
  - all
  - all.dim
  - addcdiv
  - addcmul
  - amax
  - amin
  - any
  - any.dim
  - argmax
  - argmin
  - asin
  - asinh
  - atan
  - atanh
  - binary_cross_entropy
  - binary_cross_entropy_backward
  - bitwise_not
  - ceil
  - cholesky
  - clamp.Tensor
  - clamp_max.Tensor
  - clamp_min.Tensor
  - cos
  - cosh
  - elu
  - eq.Scalar
  - eq.Tensor
  - erf
  - erfc
  - erfinv
  - exp
  - expm1
  - floor
  - frac
  - ge.Scalar
  - ge.Tensor
  - glu
  - gt.Scalar
  - gt.Tensor
  - hardshrink
  - hardshrink_backward
  - hardsigmoid
  - hardsigmoid_backward
  - hardswish
  - hardswish_backward
  - inverse
  - isnan
  - leaky_relu
  - le.Scalar
  - le.Tensor
  - logdet
  - logical_and
  - logical_not
  - logical_or
  - logical_xor
  - log_sigmoid_backward
  - log_sigmoid_forward
  - lt.Scalar
  - lt.Tensor
  - masked_fill.Scalar
  - masked_fill.Tensor
  - maximum
  - minimum
  - native_dropout_backward
  - ne.Scalar
  - ne.Tensor
  - reciprocal
  - relu
  - repeat
  - round
  - rsqrt
  - selu
  - sgn
  - sign
  - silu
  - silu_backward
  - sin
  - sinh
  - softshrink
  - softshrink_backward
  - take
  - tan
  - tanh
  - tril
  - triu
  - trunc
ir_gen:
  - _adaptive_avg_pool2d
  - _adaptive_avg_pool2d_backward
  - _adaptive_avg_pool3d
  - _adaptive_avg_pool3d_backward
  - atan2
  - baddbmm
  - bitwise_and.Tensor
  - bitwise_or.Tensor
  - bitwise_xor.Tensor
  - leaky_relu_backward
supported:
  - __ilshift__.Scalar
  - __ilshift__.Tensor
  - __irshift__.Scalar
  - __irshift__.Tensor
  - __lshift__.Scalar
  - __lshift__.Tensor
  - __rshift__.Scalar
  - __rshift__.Tensor
  - _adaptive_avg_pool2d
  - _adaptive_avg_pool2d_backward
  - _adaptive_avg_pool3d
  - _adaptive_avg_pool3d_backward
  - _amp_foreach_non_finite_check_and_unscale_
  - _amp_update_scale_
  - _copy_from
  - _copy_from_and_resize
  - _index_put_impl_
  - _linalg_slogdet
  - _linalg_svd
  - _local_scalar_dense
  - _log_softmax
  - _log_softmax_backward_data
  - _pack_padded_sequence
  - _softmax
  - _softmax_backward_data
  - _to_cpu
  - _to_copy
  - _unsafe_view
  - adaptive_max_pool2d
  - adaptive_max_pool2d_backward
  - add.Scalar
  - add.Tensor
  - addmm
  - alias_copy
  - arange.start_out
  - as_strided_copy
  - as_strided_scatter
  - atan2
  - avg_pool2d
  - avg_pool2d_backward
  - avg_pool3d
  - avg_pool3d_backward
  - baddbmm
  - bernoulli
  - bernoulli.p
  - bernoulli_.Tensor
  - binary_cross_entropy_with_logits
  - bitwise_and.Tensor
  - bitwise_or.Tensor
  - bitwise_xor.Tensor
  - bmm
  - cat
  - celu
  - celu_
  - clamp
  - clamp_max
  - clamp_min
  - clone
  - constant_pad_nd
  - convolution_backward_overrideable
  - convolution_overrideable
  - copy
  - copy_
  - count_nonzero
  - count_nonzero.dim_IntList
  - cross
  - cumprod
  - cumsum
  - detach_copy
  - diag
  - diagonal_copy
  - diagonal_scatter
  - div.Scalar
  - div.Tensor
  - div.Tensor_mode
  - dot
  - elu_backward
  - embedding_dense_backward
  - empty.memory_format
  - empty_strided
  - expand_copy
  - exponential_
  - eye.m_out
  - eye.out
  - fill_.Scalar
  - fill_.Tensor
  - flip
  - floor_divide
  - fmod.Scalar
  - fmod.Tensor
  - full
  - gather
  - gelu
  - gelu_backward
  - hardtanh
  - hardtanh_backward
  - index.Tensor
  - index_add
  - index_copy
  - index_fill_.int_Scalar
  - index_fill_.int_Tensor
  - index_put_
  - index_select
  - kl_div
  - kthvalue
  - leaky_relu_backward
  - lerp.Scalar
  - lerp.Tensor
  - lift
  - lift_fresh
  - linalg_inv_ex
  - linalg_vector_norm
  - linspace
  - log
  - log1p
  - log2
  - log10
  - logsumexp
  - masked_scatter
  - masked_select
  - max
  - max.dim
  - max.dim_max
  - max_pool2d_with_indices
  - max_pool2d_with_indices_backward
  - max_pool3d_with_indices
  - max_pool3d_with_indices_backward
  - max_unpool2d
  - max_unpool3d
  - mean
  - mean.dim
  - min
  - min.dim
  - min.dim_min
  - mish
  - mm
  - mse_loss
  - mse_loss_backward
  - mul.Scalar
  - mul.Tensor
  - multinomial
  - mv
  - mv.out
  - nan_to_num
  - native_batch_norm
  - native_batch_norm_backward
  - native_dropout
  - neg
  - nll_loss2d_backward
  - nll_loss2d_forward
  - nll_loss_backward
  - nll_loss_forward
  - nonzero
  - norm.Scalar
  - norm.ScalarOpt_dim
  - norm.ScalarOpt_dim_dtype
  - norm.ScalarOpt_dtype
  - normal.float_Tensor
  - normal.Tensor_float
  - normal.Tensor_Tensor
  - normal_
  - permute_copy
  - pow.Scalar
  - pow.Tensor_Scalar
  - pow.Tensor_Tensor
  - _prelu_kernel
  - _prelu_kernel_backward
  - prod
  - prod.dim_int
  - _propagate_xla_data
  - put_
  - qr
  - random_
  - random_.from
  - random_.to
  - reflection_pad2d
  - reflection_pad2d_backward
  - remainder.Scalar
  - remainder.Tensor
  - replication_pad1d
  - replication_pad1d_backward
  - replication_pad2d
  - replication_pad2d_backward
  - resize_
  - roll
  - rrelu_with_noise
  - rrelu_with_noise_backward
  - rsub.Scalar
  - rsub.Tensor
  - scatter.reduce
  - scatter.src
  - scatter.value
  - scatter.value_reduce
  - scatter_add
  - scatter_reduce.two
  - select_copy.int
  - select_scatter
  - selu_
  - set_.source_Tensor
  - sigmoid
  - sigmoid_backward
  - slice_copy.Tensor
  - slice_scatter
  - smooth_l1_loss
  - smooth_l1_loss_backward
  - softplus
  - softplus_backward
  - sort
  - sort.stable
  - split_copy.Tensor
  - split_with_sizes_copy
  - sqrt
  - squeeze_copy
  - squeeze_copy.dim
  - squeeze_copy.dims
  - stack
  - std
  - std.correction
  - std.dim
  - std_mean.correction
  - sub.Scalar
  - sub.Tensor
  - sum
  - sum.dim_IntList
  - svd
  - t_copy
  - tanh_backward
  - threshold
  - threshold_backward
  - topk
  - trace
  - transpose_copy.int
  - triangular_solve
  - unbind_copy.int
  - uniform_
  - unsqueeze_copy
  - upsample_bilinear2d
  - upsample_bilinear2d_backward
  - upsample_nearest2d
  - upsample_nearest2d_backward
  - var.correction
  - var_mean.correction
  - view_as_complex_copy
  - view_as_real_copy
  - view_copy
  - where.self
  - xlogy.Tensor
  - zero_
  - _native_batch_norm_legit
  - _native_batch_norm_legit.no_stats
  # Note: [functionalization and CompositeExplicitAutograd]
  # Below are all operators that are "composite" in core,
  # but require us to explicitly re-enable functionalization in order to use them.
  # Why? These operators are all CompositeExplicitAutograd, which mean that they run
  # after functionalization,
  # but their implementations call view operators (which we need to functionalize away).
  - affine_grid_generator
  - block_diag
  - _convolution
  - convolution_backward
  - diag_embed
  - embedding
  - _euclidean_dist
  - slice_backward
  - diagonal_backward
  - new_empty_strided
  - narrow_copy
  - pixel_shuffle
  - pixel_unshuffle
  - reshape
  - select_backward
  - select.int
  - slice.Tensor
  - t
  - _trilinear
  - linalg_pinv.atol_rtol_tensor
  - _cdist_forward
  - mvlgamma
  - permute
  # The same applies to these ops, but we already have direct lowerings for them
  # - logsumexp.out
  # Note: [Disabling functionalization]
  # The ops below are no longer needed when functionalization is enabled. 
  # However, we sometimes may want to disable functionalization (A/B testing,
  # debugging, etc). The ops below exist only to disable functionalization,
  # new features/functionalities should not depend on these ops.
  - as_strided
  - as_strided_
  - diagonal
  - expand
  - view
symint:
  - embedding
  - empty.memory_format
  - empty_strided
  - expand_copy
  - new_empty_strided
  - view_copy
  - diagonal_backward
  - narrow_copy
  - select_backward
  - select.int
  # See Note: [functionalization and CompositeExplicitAutograd]
  - reshape
  # See Note: [Disabling functionalization]
  - expand
  - view
autograd:
  - einsum
  - max_pool2d
  - max_pool3d
  - native_layer_norm
  - native_group_norm
