steps:
- id: 'common-flags'
  name: 'bash'
  args:
  - -cx
  - |
    # Create shell variables from arguments for parameter expansion
    _BUILD_ARGS=${_BUILD_ARGS}
    _PLATFORM=${_PLATFORM}

    args=(${_BUILD_ARGS//,/ })
    flags=(
      --shm-size=${_SHM_SIZE}
      --build-arg=bazel_jobs=${_BAZEL_JOBS}
      --build-arg=python_version=${_PYTHON_VERSION}
      # TODO: use current version in setup.py
      --build-arg=package_version="2.0.0.dev$(date +%Y%m%d)${_PLATFORM:++$_PLATFORM}"
      ${args[@]/#/--build-arg=})
    echo ${flags[@]} | tee /docker/flags.txt
  volumes:
  - name: docker
    path: /docker
- id: 'build-wheels'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: sh
  args:
  - -cx
  - |
    docker build . \
      --file=docker/experimental/Dockerfile \
      --tag=${_ARTIFACTS_IMAGE_URL} \
      --target=artifacts \
      $(cat /docker/flags.txt)
  timeout: 14400s
  volumes:
  - name: docker
    path: /docker
- id: 'push-artifacts'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - push
  - ${_ARTIFACTS_IMAGE_URL}
- id: 'copy-wheels'
  waitFor: ['build-wheels']
  name: ${_ARTIFACTS_IMAGE_URL}
  entrypoint: bash
  args:
  - -c
  - |
    cp /pytorch/dist/*.whl /wheels
    cp /pytorch/xla/dist/*.whl /wheels
  volumes:
  - name: 'wheels'
    path: /wheels
- id: 'install-twine'
  waitFor: ['build-wheels']
  name: python
  entrypoint: pip
  args:
  - install
  - --user
  - twine
  - keyrings.google-artifactregistry-auth
- id: 'export-wheels'
  waitFor: ['copy-wheels', 'install-twine']
  name: python
  entrypoint: python
  args:
  - '-m'
  - 'twine'
  - 'upload'
  - '--repository-url'
  - 'https://${_ARTIFACT_REGISTRY_REGION}-python.pkg.dev/$PROJECT_ID/torch-xla/'
  - '/wheels/*'
  volumes:
  - name: 'wheels'
    path: /wheels
- id: 'release-image'
  waitFor: ['build-wheels']
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: sh
  args:
  - -cx
  - |
    docker build . \
      --file=docker/experimental/Dockerfile \
      --tag=${_RELEASE_IMAGE_URL} \
      $(cat /docker/flags.txt)
  timeout: 14400s
  volumes:
  - name: docker
    path: /docker
- id: 'push-release'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - push
  - ${_RELEASE_IMAGE_URL}
- id: 'tag-image'
  waitFor: ['push-artifacts', 'push-release']
  name: 'google/cloud-sdk'
  entrypoint: bash
  args:
  - -c
  - |
    gcloud artifacts docker tags add ${_ARTIFACTS_IMAGE_URL} ${_ARTIFACTS_IMAGE_URL}-$(date +%Y%m%d)
    gcloud artifacts docker tags add ${_RELEASE_IMAGE_URL} ${_RELEASE_IMAGE_URL}-$(date +%Y%m%d)
substitutions:
  _ARTIFACT_REGISTRY_REGION: us
  _RELEASE_VERSION: 'nightly'  # or rX.Y.Z
  _PYTHON_VERSION: '3.8'
  _PLATFORM: ''
  _IMAGE_TAG: ${_RELEASE_VERSION}-${_PYTHON_VERSION}-${_PLATFORM}
  _IMAGE_REPOSITORY: ${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/torch-xla-images
  _RELEASE_IMAGE_URL: ${_IMAGE_REPOSITORY}/torch-xla:${_IMAGE_TAG}
  _ARTIFACTS_IMAGE_URL: ${_IMAGE_REPOSITORY}/artifacts:${_IMAGE_TAG}
  _CACHE_IMAGE_URL: ${_IMAGE_REPOSITORY}/cache
  _BAZEL_JOBS: '32'
  _CACHE: 'true'
  _CACHE_TTL: '18h'
  _BUILD_ARGS: tpuvm=1,cuda=0
  _SHM_SIZE: '16gb'
options:
  # To run in a test project, either point to your pool or replace this with
  # `machineType`. You may have to reduce _BAZEL_JOBS.
  pool:
    name: 'projects/tpu-pytorch/locations/us-central1/workerPools/wheel_build'
  # machineType: E2_HIGHCPU_32
  dynamic_substitutions: true
  substitution_option: 'ALLOW_LOOSE'
timeout: 24000s
