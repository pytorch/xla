name: Build and test
on:
  pull_request:
    branches:
      - master
      - r[0-9]+.[0-9]+
  push:
    branches:
      - master
      - r[0-9]+.[0-9]+
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}
  cancel-in-progress: true

jobs:
  check_code_changes:
    name: Check Code Changes
    uses: ./.github/workflows/_check_code_changes.yml
    with:
      event_name: ${{ github.event_name }}
      # For pull_request, use PR's base and head. For push, use event's before and sha.
      base_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
      head_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

  get-torch-commit:
    needs: [check_code_changes]
    runs-on: ubuntu-24.04
    outputs:
      torch_commit: ${{ steps.commit.outputs.torch_commit }}
    steps:
      - name: Get latest torch commit
        id: commit
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        run: |
          echo "torch_commit=$(git ls-remote https://github.com/pytorch/pytorch.git HEAD | awk '{print $1}')" >> "$GITHUB_OUTPUT"
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  build-torch-xla:
    name: "Build PyTorch/XLA"
    needs: [check_code_changes, get-torch-commit]
    runs-on: ubuntu-24.04
    steps:
      - name: Build PyTorch/XLA
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_build_torch_xla.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
          torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
          timeout-minutes: 240
        secrets:
          gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  build-torch-with-cuda:
    name: "Build PyTorch with CUDA"
    needs: [check_code_changes, get-torch-commit]
    runs-on: ubuntu-24.04
    steps:
      - name: Build PyTorch with CUDA
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_build_torch_with_cuda.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
          torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
          runner: linux.24xlarge
          timeout-minutes: 120
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  build-cuda-plugin:
    name: "Build XLA CUDA plugin"
    needs: [check_code_changes]
    runs-on: ubuntu-24.04
    steps:
      - name: Build XLA CUDA plugin
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_build_plugin.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
        secrets:
          gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  test-python-cpu:
    name: "CPU tests"
    needs: [build-torch-xla, check_code_changes, get-torch-commit]
    runs-on: ubuntu-24.04
    steps:
      - name: Run CPU tests
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_test.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
          timeout-minutes: 120
          collect-coverage: false
          torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
        secrets:
          gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  test-cuda:
    name: "GPU tests"
    needs: [build-torch-xla, build-cuda-plugin, check_code_changes, get-torch-commit]
    runs-on: ubuntu-24.04
    steps:
      - name: Run GPU tests
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_test.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
          runner: linux.g4dn.12xlarge.nvidia.gpu
          timeout-minutes: 300
          collect-coverage: false
          install-cuda-plugin: true
          torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
        secrets:
          gcloud-service-key: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  test-cuda-with-pytorch-cuda-enabled:
    name: "GPU tests requiring torch CUDA"
    needs: [build-torch-with-cuda, build-torch-xla, build-cuda-plugin, check_code_changes, get-torch-commit]
    runs-on: ubuntu-24.04
    steps:
      - name: Run GPU tests requiring torch CUDA
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_test_requiring_torch_cuda.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_cuda_12.3
          runner: linux.8xlarge.nvidia.gpu
          timeout-minutes: 300
          collect-coverage: false
          torch-commit: ${{needs.get-torch-commit.outputs.torch_commit}}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."

  test-tpu:
    name: "TPU tests"
    needs: [build-torch-xla, check_code_changes]
    runs-on: ubuntu-24.04
    steps:
      - name: Run TPU tests
        if: >
            (github.event_name == 'push' || github.event_name == 'pull_request') &&
            needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_tpu_ci.yml
        with:
          timeout-minutes: 300
      - name: Report no code changes
        if: >
          !((github.event_name == 'push' || github.event_name == 'pull_request') &&
            needs.check_code_changes.outputs.has_code_changes == 'true')
        run: |
          echo "No code changes were detected that require running the full test suite."

  push-docs:
    name: "Build docs"
    needs: [build-torch-xla, check_code_changes]
    runs-on: ubuntu-24.04
    steps:
      - name: Build and push docs
        if: needs.check_code_changes.outputs.has_code_changes == 'true'
        uses: ./.github/workflows/_docs.yml
        with:
          dev-image: us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/development:3.10_tpuvm
        secrets:
          torchxla-bot-token: ${{ secrets.TORCH_XLA_BOT_TOKEN }}
      - name: Report no code changes
        if: needs.check_code_changes.outputs.has_code_changes == 'false'
        run: |
          echo "No code changes were detected that require running the full test suite."
