name: TPU Integration Test
on:
  workflow_call:
    inputs:
      timeout-minutes:
        required: false
        type: number
        description: Timeout in minutes for the job run
        default: 120
      collect-coverage:
        required: false
        type: boolean
        description: Set to true to collect coverage information
        default: false
jobs:
  tpu-test:
    runs-on: v4-runner-set
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      fail-fast: false
      matrix:
        test_script:
          - test/tpu/run_tests.sh
          - test/tpu/run_expensive_test_1.sh
          - test/tpu/run_expensive_test_2.sh
    env:
      USE_COVERAGE: ${{ inputs.collect-coverage && '1' || '0' }}
      COVERAGE_DIR: '/tmp/lcov'
    steps:
      - name: Checkout actions
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/workflows/setup
          path: .actions
      - name: Setup
        uses: ./.actions/.github/workflows/setup
        with:
          torch-commit: ${{ inputs.torch-commit }}
          wheels-artifact: torch-xla-wheels
      - name: Install test dependencies
        shell: bash
        run: |
          # TODO: Add these in setup.py
          pip install --upgrade pip
          pip install fsspec
          pip install rich
          # libtpu is needed for pallas tests.
          pip install torch_xla[tpu] -f https://storage.googleapis.com/libtpu-wheels/index.html -f https://storage.googleapis.com/libtpu-releases/index.html
          pip install --upgrade protobuf
      - name: Extra Coverage deps
        shell: bash
        run: |
          set -x
          pip install -U coverage
        if: ${{ inputs.collect-coverage }}
      - name: Run Tests (${{ matrix.test_script }})
        env:
          PJRT_DEVICE: TPU
          TPU_LOG_DIR: tpu_logs_${{ strategy.job-index }}
          COVERAGE_FILE: "${{ env.COVERAGE_DIR }}/py-coverage"
          LLVM_PROFILE_FILE: "${{ env.COVERAGE_DIR }}/cpp-coverage/data-%p.profraw"
        run: |
          cd pytorch/xla
          ${{ matrix.test_script }}
          # Merge the profraw files, so that they take less space.
          llvm-profdata-17 merge $COVERAGE_DIR/cpp-coverage/*.profraw -o $COVERAGE_DIR/cpp-coverage.profdata
          # Remove the collected raw coverage files.
          rm -r $COVERAGE_DIR/cpp-coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: "coverage-tpu"
          path: "${{ env.COVERAGE_DIR }}"
        if: ${{ inputs.collect-coverage }}
