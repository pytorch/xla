name: Check Code Changes

on:
  workflow_call:
    inputs:
      event_name:
        required: true
        type: string
      base_sha:
        required: true
        type: string
      head_sha:
        required: true
        type: string
    outputs:
      has_code_changes:
        description: "True if non-markdown code files were changed or event is workflow_dispatch/schedule, false otherwise."
        value: ${{ jobs.check_files.outputs.has_code_changes }}

jobs:
  check_files:
    runs-on: ubuntu-24.04
    outputs:
      has_code_changes: ${{ steps.perform_check.outputs.has_code_changes }}
    steps:
      - name: Checkout code for diff (if needed)
        # Checkout only if a diff is actually needed
        if: inputs.event_name != 'workflow_dispatch' && inputs.event_name != 'schedule'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get history for diff

      - name: Perform file content check
        id: perform_check
        run: |
          # Handle workflow_dispatch and schedule events first
          if [[ "${{ inputs.event_name }}" == "workflow_dispatch" || "${{ inputs.event_name }}" == "schedule" ]]; then
            echo "Event is ${{ inputs.event_name }}. Assuming code changes or full run needed."
            echo "has_code_changes=true" >> "$GITHUB_OUTPUT"
            exit 0 # Exit early, no diff needed
          fi

          # Proceed with diff-based checks for other events (e.g., pull_request, push)
          echo "Performing file check. Base SHA: ${{ inputs.base_sha }}, Head SHA: ${{ inputs.head_sha }}"

          # Handle initial push (base SHA is all zeros)
          if [[ "${{ inputs.base_sha }}" == "0000000000000000000000000000000000000000" ]]; then
            echo "Initial push (base SHA is zeros). Assuming code changes."
            echo "has_code_changes=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Handle cases where base and head are the same (e.g., re-run on a specific commit)
          if [[ "${{ inputs.base_sha }}" == "${{ inputs.head_sha }}" ]]; then
            echo "Base SHA is the same as Head SHA. No file changes. Assuming no code changes for skipping purposes."
            echo "has_code_changes=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # If we reach here, checkout step should have run and we need to perform a diff
          git diff --name-only --no-renames ${{ inputs.base_sha }} ${{ inputs.head_sha }} > changed_files.txt

          echo "Changed files (between ${{ inputs.base_sha }} and ${{ inputs.head_sha }}):"
          cat changed_files.txt

          if grep -q -v -E '\.md$' changed_files.txt; then
            echo "Non-markdown changes detected."
            echo "has_code_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "Only markdown changes detected or no changes found in diff."
            echo "has_code_changes=false" >> "$GITHUB_OUTPUT"
          fi
        shell: bash
