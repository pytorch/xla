diff --git a/torch/testing/_internal/common_device_type.py b/torch/testing/_internal/common_device_type.py
index 01973711e7..972c925167 100644
--- a/torch/testing/_internal/common_device_type.py
+++ b/torch/testing/_internal/common_device_type.py
@@ -1,4 +1,6 @@
+import copy
 import inspect
+import runpy
 import threading
 from functools import wraps
 import unittest
@@ -275,6 +277,14 @@ device_type_test_bases.append(CPUTestBase)
 if torch.cuda.is_available():
     device_type_test_bases.append(CUDATestBase)
 
+
+_PYTORCH_TEST_PATH = os.environ.get('PYTORCH_TEST_PATH', None)
+if _PYTORCH_TEST_PATH:
+    for path in _PYTORCH_TEST_PATH.split(':'):
+        mod = runpy.run_path(os.path.join(path, 'pytorch_test_base.py'), init_globals=globals())
+        device_type_test_bases.append(mod['TEST_CLASS'])
+
+
 PYTORCH_CUDA_MEMCHECK = os.getenv('PYTORCH_CUDA_MEMCHECK', '0') == '1'
 
 
@@ -320,7 +330,7 @@ def instantiate_device_type_tests(generic_test_class, scope, except_for=None):
                 assert inspect.isfunction(test), "Couldn't extract function from '{0}'".format(name)
 
                 # Instantiates the device-specific tests
-                device_type_test_class.instantiate_test(name, test)
+                device_type_test_class.instantiate_test(name, copy.deepcopy(test))
             else:  # Ports non-test member
                 assert name not in device_type_test_class.__dict__, "Redefinition of directly defined member {0}".format(name)
 
